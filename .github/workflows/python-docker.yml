name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest
          platforms: linux/amd64,linux/arm64
          build-args: |
            AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION=${{ secrets.AWS_DEFAULT_REGION }}
            S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Install SSH client
        run: sudo apt-get install -y sshpass

      - name: Trigger Docker update script on Raspberry Pi
        env:
          SERVER_MODE: test
          PI_HOST: ${{ secrets.PI_HOST }}
          PI_USER: ${{ secrets.PI_USER }}
          PI_PASSWORD: ${{ secrets.PI_PASSWORD }}
          DOCKER_IMAGE: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGCHAIN_TRACING_V2: "true"
          LANGCHAIN_ENDPOINT: "https://api.smith.langchain.com"
          LANGCHAIN_API_KEY: ${{ secrets.LANGCHAIN_API_KEY }}
          LANGCHAINPROJECT: "singsongsangsong"
        run: |
          sshpass -p $PI_PASSWORD ssh -o StrictHostKeyChecking=no $PI_USER@$PI_HOST << EOF
          echo "Connected to Raspberry Pi"
          export SERVER_MODE=$SERVER_MODE
          export DB_HOST=$DB_HOST
          export DB_PORT=$DB_PORT
          export DB_NAME=$DB_NAME
          export DB_USER=$DB_USER
          export REDIS_HOST=$REDIS_HOST
          export DB_PASSWORD=$DB_PASSWORD
          export OPENAI_API_KEY=$OPENAI_API_KEY
          export LANGCHAIN_TRACING_V2=$LANGCHAIN_TRACING_V2
          export LANGCHAIN_ENDPOINT=$LANGCHAIN_ENDPOINT
          export LANGCHAIN_API_KEY=$LANGCHAIN_API_KEY
          export LANGCHAINPROJECT=$LANGCHAINPROJECT
  
          # Run the script with the Docker image parameter
          nohup bash -c "cd /home/sunwupark/Downloads/Singsong && ./python_grpc_with_milvus.sh $DOCKER_IMAGE" &
  
          echo "Docker update script executed successfully."
          EOF